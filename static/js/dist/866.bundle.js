"use strict";(self.webpackChunkboba_vim=self.webpackChunkboba_vim||[]).push([[866],{485:(e,t,n)=>{n.r(t),n.d(t,{disablePaymentVim:()=>m,getInsertModeStatus:()=>C,getStripeNavigationStatus:()=>E,initializePaymentVim:()=>g,refreshPaymentCursor:()=>k});var o=0,a=!1,r=!1,i=[],l=!1,d=[{selector:".close-payment-modal",column:0,row:0,type:"button"},{selector:"#payment-amount",column:0,row:1,type:"input"},{selector:"#support-message",column:0,row:2,type:"textarea"},{selector:"#card-element",column:0,row:3,type:"stripe-card"},{selector:"#submit-payment",column:0,row:4,type:"button"}],c=["card-number","card-expiry","card-cvc"],s=0,u=!1;function g(){logger.debug("=== INITIALIZING PAYMENT VIM NAVIGATION ==="),logger.debug("isVimNavigationActive:",a,"keyListenerAdded:",l),logger.debug("Payment: Force cleaning up any previous state"),document.removeEventListener("keydown",y,!0),l=!1,x(),h(),a=!1,r=!1,u=!1,o=0,s=0,i=[];var e=document.getElementById("payment-modal");if(e){var t=window.getComputedStyle(e);logger.debug("Payment modal display:",t.display),i=[],logger.debug("Payment: Updating elements for payment modal"),d.forEach(function(e){var t=document.querySelector(e.selector);logger.debug("Payment: Looking for element with selector: ".concat(e.selector),t?"FOUND":"NOT FOUND"),t&&function(e){if(!e)return!1;try{var t=window.getComputedStyle(e),n=e.getBoundingClientRect();return"none"!==t.display&&"hidden"!==t.visibility&&"0"!==t.opacity&&n.width>0&&n.height>0&&!e.hasAttribute("disabled")&&!e.classList.contains("hidden")}catch(e){return logger.debug("Payment: Error checking visibility:",e),!1}}(t)?(i.push(e),logger.debug("Payment: Added element ".concat(e.selector," to navigation"))):t&&logger.debug("Payment: Element ".concat(e.selector," found but not visible"))}),logger.debug("Available payment elements:",i.length),0!==i.length?(o=0,a=!0,logger.debug("Payment vim starting at element index: ".concat(o)),logger.debug("Available elements:",i),window.hideCursor&&window.hideCursor(),window.disableVimNavigation&&window.disableVimNavigation(),w(),l?logger.debug("Payment: Event listener already exists"):(document.addEventListener("keydown",y,!0),l=!0,logger.debug("Payment: Event listener added with capture=true")),document.addEventListener("click",function(t){if(e&&!e.classList.contains("hidden")&&a){var n=t.target;if("INPUT"!==n.tagName&&"TEXTAREA"!==n.tagName){n.closest("#payment-modal")&&(n.classList.contains("close-payment-modal")||n.textContent&&n.textContent.includes("Ã—"))&&(logger.debug("Payment: Detected close button click - marking for cleanup"),window.paymentModalClosingViaCancel=!0)}else{var r=i.findIndex(function(e){return document.querySelector(e.selector)===n});-1!==r&&(o=r,f(),logger.debug("Payment: Auto-entered insert mode via click on input"))}}},!0),logger.debug("=== PAYMENT VIM NAVIGATION INITIALIZED ===")):logger.warn("Payment: No available elements found for navigation")}else logger.warn("No payment modal found for vim navigation")}function m(){logger.debug("Payment: Disabling payment vim navigation"),a=!1,r=!1,u=!1,x(),h(),window.getSelection&&window.getSelection().removeAllRanges(),document.querySelectorAll("#payment-modal input, #payment-modal textarea, #payment-modal button").forEach(function(e){if(e.blur&&e.blur(),e.setSelectionRange)try{e.setSelectionRange(0,0)}catch(e){}e.style&&(e.style.outline="",e.style.boxShadow="",e.style.border="")}),document.activeElement&&document.activeElement.blur&&document.activeElement.blur(),document.querySelectorAll(".vim-cursor").forEach(function(e){e.remove()}),document.querySelectorAll("[data-original-text]").forEach(function(e){var t=e.getAttribute("data-original-text");t&&(e.textContent=t,e.removeAttribute("data-original-text"))}),document.removeEventListener("keydown",y,!0),l=!1,o=0,s=0,i=[],logger.debug("Payment vim navigation disabled and state reset")}function p(){if(o<0||o>=i.length)return null;var e=i[o];if(!e)return null;try{return document.querySelector(e.selector)}catch(e){return null}}function y(e){var t=document.getElementById("payment-modal"),n=t&&!t.classList.contains("hidden"),l="INPUT"===e.target.tagName||"TEXTAREA"===e.target.tagName||e.target.isContentEditable;if(!n||r||l||"h"!==e.key.toLowerCase()&&"j"!==e.key.toLowerCase()&&"k"!==e.key.toLowerCase()&&"l"!==e.key.toLowerCase()&&"i"!==e.key.toLowerCase()&&"Enter"!==e.key&&"Escape"!==e.key||(e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),logger.debug("Payment: Intercepted key:",e.key,"preventing main vim activation")),"h"!==e.key.toLowerCase()&&"j"!==e.key.toLowerCase()&&"k"!==e.key.toLowerCase()&&"l"!==e.key.toLowerCase()&&"i"!==e.key.toLowerCase()&&"Enter"!==e.key&&"Escape"!==e.key||logger.debug("Payment: Key pressed:",e.key,"isVimNavigationActive:",a),a)if(n){if(r)return"Escape"===e.key?(e.preventDefault(),e.stopPropagation(),void function(){logger.debug("Payment: Exiting insert mode"),r=!1,h();var e=p();e&&(e.blur(),window.getSelection&&window.getSelection().removeAllRanges(),e.style.outline="none");w()}()):void logger.debug("Payment: Insert mode - letting key pass through:",e.key);if(u)switch(e.key.toLowerCase()){case"h":return e.preventDefault(),e.stopPropagation(),void(s>0&&(s--,w(),logger.debug("Payment: Moved to Stripe element ".concat(c[s]))));case"l":return e.preventDefault(),e.stopPropagation(),void(s<c.length-1&&(s++,w(),logger.debug("Payment: Moved to Stripe element ".concat(c[s]))));case"j":case"k":e.preventDefault(),e.stopPropagation(),b();break;case"enter":return e.preventDefault(),e.stopPropagation(),void((d=document.querySelector("#card-element"))&&(d.click(),logger.debug("Payment: Focused Stripe card element")));case"escape":return e.preventDefault(),e.stopPropagation(),void b()}var d;switch(e.key.toLowerCase()){case"h":e.preventDefault(),e.stopPropagation(),function(){var e=i[o];if(e&&"stripe-card"===e.type)return void v();logger.debug("Payment: Left movement not available in single column layout")}();break;case"j":e.preventDefault(),e.stopPropagation(),function(){if(i.length<=1)return;var e=i[o];if(!e)return;if(u)return void b();for(var t=-1,n=1/0,a=0;a<i.length;a++){var r=i[a];r.column===e.column&&r.row>e.row&&r.row<n&&(n=r.row,t=a)}if(-1===t)for(var l=1/0,d=0;d<i.length;d++){var c=i[d];c.column===e.column&&c.row<l&&(l=c.row,t=d)}t>=0&&(o=t,w(),P(),logger.debug("Payment: Moved down to index ".concat(t)))}();break;case"k":e.preventDefault(),e.stopPropagation(),function(){if(i.length<=1)return;var e=i[o];if(!e)return;if(u)return void b();for(var t=-1,n=-1,a=0;a<i.length;a++){var r=i[a];r.column===e.column&&r.row<e.row&&r.row>n&&(n=r.row,t=a)}if(-1===t)for(var l=-1,d=0;d<i.length;d++){var c=i[d];c.column===e.column&&c.row>l&&(l=c.row,t=d)}t>=0&&(o=t,w(),P(),logger.debug("Payment: Moved up to index ".concat(t)))}();break;case"l":e.preventDefault(),e.stopPropagation(),function(){var e=i[o];if(e&&"stripe-card"===e.type)return void v();logger.debug("Payment: Right movement not available in single column layout")}();break;case"i":e.preventDefault(),e.stopPropagation(),f();break;case"enter":e.preventDefault(),e.stopPropagation(),function(){var e=p(),t=i[o];if(!e||!t)return void logger.debug("Payment: No element to activate");if(logger.debug("Payment: Activating element:",t.type,t.selector),"input"===t.type||"textarea"===t.type)f();else if("stripe-card"===t.type)v();else if("button"===t.type){(e.classList.contains("close-payment-modal")||e.textContent.includes("Ã—"))&&(window.paymentModalClosingViaCancel=!0);try{e.click()}catch(e){logger.debug("Payment: Error clicking element:",e)}}}();break;case"escape":e.preventDefault(),e.stopPropagation(),window.disableVimNavigation&&window.disableVimNavigation(),logger.debug("Payment: Already in normal mode - escape does not close modal, main vim forcibly disabled")}}else logger.debug("Payment: Key ignored - modal not visible");else logger.debug("Payment: Key ignored - vim navigation not active")}function v(){logger.debug("Payment: Entering Stripe card navigation"),u=!0,s=0,w()}function b(){logger.debug("Payment: Exiting Stripe card navigation"),u=!1,s=0,w()}function f(){var e=p(),t=i[o];e&&t&&("input"===t.type||"textarea"===t.type)?(logger.debug("Payment: Entering insert mode on input field"),r=!0,x(),e.focus(),function(e){if(!e)return;var t=document.createElement("div");t.className="payment-insert-indicator",t.textContent="INSERT";var n=e.getBoundingClientRect();t.style.cssText="\n    position: fixed;\n    top: ".concat(n.top-30,"px;\n    left: ").concat(n.left,"px;\n    background: rgba(0, 255, 0, 0.95);\n    color: black;\n    padding: 2px 6px;\n    border-radius: 3px;\n    font-size: 11px;\n    font-weight: bold;\n    z-index: 99999;\n    pointer-events: none;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(0, 200, 0, 1);\n  "),document.body.appendChild(t)}(e)):logger.debug("Payment: Cannot enter insert mode - not on input field")}function w(){if(logger.debug("Payment: updateCursor called"),x(),!r){var e=p();logger.debug("Payment: Current element for cursor:",e),e?function(e){if(!e)return;var t=i[o];if("input"===t.type||"textarea"===t.type){var n=document.createElement("div");n.className="payment-vim-cursor",n.style.cssText="\n      position: fixed;\n      border: 3px solid #ff6b35;\n      border-radius: 6px;\n      pointer-events: none;\n      z-index: 99998;\n      animation: payment-vim-cursor-pulse 1s ease-in-out infinite alternate;\n      box-shadow: 0 0 12px rgba(255, 107, 53, 0.8);\n      background: rgba(255, 107, 53, 0.1);\n    ";var a=e.getBoundingClientRect(),r=4;n.style.top=a.top-r+"px",n.style.left=a.left-r+"px",n.style.width=a.width+2*r+"px",n.style.height=a.height+2*r+"px",document.body.appendChild(n)}else if("stripe-card"===t.type){var l=document.createElement("div");if(l.className="payment-vim-cursor",u){var d=c[s];l.textContent="ðŸ§‹ ".concat(d.replace("-"," ").toUpperCase()),l.style.cssText="\n        position: fixed;\n        background: rgba(255, 215, 0, 0.95);\n        color: black;\n        padding: 4px 8px;\n        border-radius: 4px;\n        font-size: 12px;\n        font-weight: bold;\n        z-index: 99999;\n        pointer-events: none;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n        border: 2px solid #FFD700;\n        animation: payment-vim-cursor-pulse 1s ease-in-out infinite alternate;\n      "}else l.style.cssText="\n        position: fixed;\n        border: 3px solid #9b59b6;\n        border-radius: 6px;\n        pointer-events: none;\n        z-index: 99998;\n        animation: payment-vim-cursor-pulse 1s ease-in-out infinite alternate;\n        box-shadow: 0 0 12px rgba(155, 89, 182, 0.8);\n        background: rgba(155, 89, 182, 0.1);\n      ";var g=e.getBoundingClientRect();if(u)l.style.top=g.top-35+"px",l.style.left=g.left+"px";else{var m=4;l.style.top=g.top-m+"px",l.style.left=g.left-m+"px",l.style.width=g.width+2*m+"px",l.style.height=g.height+2*m+"px"}document.body.appendChild(l)}else if("button"===t.type){var p=e.textContent;e.setAttribute("data-original-payment-text",p),e.textContent="ðŸ§‹ "+p}if(!document.getElementById("payment-vim-cursor-styles")){var y=document.createElement("style");y.id="payment-vim-cursor-styles",y.textContent="\n      @keyframes payment-vim-cursor-pulse {\n        0% { \n          opacity: 0.7; \n        }\n        100% { \n          opacity: 1; \n        }\n      }\n    ",document.head.appendChild(y)}}(e):logger.debug("Payment: No element found for cursor")}}function x(){document.querySelectorAll(".payment-vim-cursor").forEach(function(e){e.remove()}),document.querySelectorAll("[data-original-payment-text]").forEach(function(e){e.textContent=e.getAttribute("data-original-payment-text"),e.removeAttribute("data-original-payment-text")})}function h(){document.querySelectorAll(".payment-insert-indicator").forEach(function(e){e.remove()})}function P(){var e=p();if(e){var t=e.getBoundingClientRect(),n=window.innerHeight,o=window.innerWidth;(t.top<0||t.bottom>n||t.left<0||t.right>o)&&(logger.debug("Payment: Element is out of view, scrolling into view"),e.scrollIntoView({behavior:"smooth",block:"center",inline:"center"}))}}function k(){a&&!r&&w()}function C(){return r}function E(){return u}}}]);