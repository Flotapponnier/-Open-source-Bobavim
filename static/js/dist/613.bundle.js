"use strict";(self.webpackChunkboba_vim=self.webpackChunkboba_vim||[]).push([[613],{613:(e,t,o)=>{o.r(t),o.d(t,{disableAuthVim:()=>g,getCurrentAuthMode:()=>C,getInsertModeStatus:()=>k,initializeAuthVim:()=>s,refreshAuthCursor:()=>x,updateAuthVimForMode:()=>m});var n=0,r=!1,i=!1,a="login",l=[],u=!1,c=null,d={login:[{selector:"#login-username",column:0,row:0,type:"input"},{selector:"#login-password",column:0,row:1,type:"input"},{selector:'#loginForm button[type="submit"]',column:0,row:2,type:"button"},{selector:"#loginForm .modal-btn.secondary",column:1,row:2,type:"button"},{selector:"#switchToRegister",column:0,row:3,type:"link"},{selector:"#switchToForgotPassword",column:0,row:4,type:"link"}],register:[{selector:"#reg-username",column:0,row:0,type:"input"},{selector:"#reg-email",column:0,row:1,type:"input"},{selector:"#reg-password",column:0,row:2,type:"input"},{selector:'#registrationForm button[type="submit"]',column:0,row:3,type:"button"},{selector:"#registrationForm .modal-btn.secondary",column:1,row:3,type:"button"},{selector:"#switchToLogin",column:0,row:4,type:"link"}],forgotPassword:[{selector:"#forgot-email",column:0,row:0,type:"input"},{selector:'#forgotPasswordForm button[type="submit"]',column:0,row:1,type:"button"},{selector:"#forgotPasswordForm .modal-btn.secondary",column:1,row:1,type:"button"},{selector:"#switchToLoginFromForgot",column:0,row:2,type:"link"}]};function s(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"login";logger.debug("=== INITIALIZING AUTH VIM NAVIGATION ==="),logger.debug("Auth mode:",e,"isVimNavigationActive:",r,"keyListenerAdded:",u),logger.debug("Auth: Force cleaning up any previous state"),document.removeEventListener("keydown",v,!0),u=!1,y(),w(),c&&(clearInterval(c),c=null,logger.debug("Auth: Cleared previous main vim disable interval")),r=!1,i=!1,n=0,l=[];var t=document.getElementById("authModal");if(t){var o=window.getComputedStyle(t);logger.debug("Auth modal display:",o.display),a=e,h(e),0!==l.length?(n=0,r=!0,logger.debug("Auth vim starting at element index: ".concat(n)),logger.debug("Available elements:",l),window.hideCursor&&window.hideCursor(),window.disableVimNavigation&&window.disableVimNavigation(),c&&(clearInterval(c),c=null),f(),u?logger.debug("Auth: Event listener already exists"):(document.addEventListener("keydown",v,!0),u=!0,logger.debug("Auth: Event listener added with capture=true")),document.addEventListener("click",function(e){if(t&&!t.classList.contains("hidden")&&r){var o=e.target;if("INPUT"!==o.tagName&&"TEXTAREA"!==o.tagName){o.closest("#authModal")&&(o.classList.contains("secondary")&&o.textContent.toLowerCase().includes("cancel")||o.onclick&&o.onclick.toString().includes("closeAuthModal")||o.textContent&&o.textContent.includes("Ã—")||o.classList.contains("close-btn")||o.id&&o.id.includes("close"))&&(logger.debug("Auth: Detected close/cancel button click - immediate cleanup"),window.authModalClosingViaCancel=!0,y(),w(),logger.debug("Auth: Immediate cleanup completed on cancel button click"))}else{var i=l.findIndex(function(e){return document.querySelector(e.selector)===o});-1!==i&&(n=i,b(),logger.debug("Auth: Auto-entered insert mode via click on input"))}}},!0),logger.debug("=== AUTH VIM NAVIGATION INITIALIZED ===")):logger.warn("Auth: No available elements found for navigation")}else logger.warn("No auth modal found for vim navigation")}function g(){logger.debug("Auth: Disabling auth vim navigation"),r=!1,i=!1,y(),w(),c&&(clearInterval(c),c=null,logger.debug("Auth: Cleared main vim disable interval")),window.getSelection&&window.getSelection().removeAllRanges(),document.querySelectorAll("#authModal input, #authModal textarea, #authModal button").forEach(function(e){if(e.blur&&e.blur(),e.setSelectionRange)try{e.setSelectionRange(0,0)}catch(e){}e.style&&(e.style.outline="",e.style.boxShadow="",e.style.border="")}),document.activeElement&&document.activeElement.blur&&document.activeElement.blur(),document.querySelectorAll("#authModal *:focus").forEach(function(e){e.blur(),e.style.outline="none"}),document.querySelectorAll("input, textarea, button, [contenteditable]").forEach(function(e){e.style&&(e.style.outline="",e.style.boxShadow="")}),document.querySelectorAll('.vim-cursor, .auth-vim-cursor, [class*="vim-cursor"]').forEach(function(e){e.remove()}),document.querySelectorAll('.insert-indicator, .auth-insert-indicator, [class*="insert-indicator"]').forEach(function(e){e.remove()}),document.querySelectorAll("[data-original-text]").forEach(function(e){var t=e.getAttribute("data-original-text");t&&(e.textContent=t,e.removeAttribute("data-original-text"))}),document.removeEventListener("keydown",v,!0),u=!1,n=0,l=[],a="login",logger.debug("Auth vim navigation disabled and state reset")}function m(e){r&&(a=e,h(e),n=0,i||f(),logger.debug("Auth vim updated for mode:",e))}function h(e){l=[];var t=d[e];t?(logger.debug("Auth: Updating elements for mode: ".concat(e)),t.forEach(function(e){var t=document.querySelector(e.selector);logger.debug("Auth: Looking for element with selector: ".concat(e.selector),t?"FOUND":"NOT FOUND"),t&&function(e){if(!e)return!1;try{var t=window.getComputedStyle(e),o=e.getBoundingClientRect();return"none"!==t.display&&"hidden"!==t.visibility&&"0"!==t.opacity&&o.width>0&&o.height>0&&!e.hasAttribute("disabled")&&!e.classList.contains("hidden")}catch(e){return logger.debug("Auth: Error checking visibility:",e),!1}}(t)?(l.push(e),logger.debug("Auth: Added element ".concat(e.selector," to navigation"))):t&&logger.debug("Auth: Element ".concat(e.selector," found but not visible"))}),logger.debug("Available auth elements:",l.length)):logger.warn("Unknown auth mode:",e)}function p(){if(n<0||n>=l.length)return null;var e=l[n];if(!e)return null;try{return document.querySelector(e.selector)}catch(e){return null}}function v(e){var t=document.getElementById("authModal"),o=t&&!t.classList.contains("hidden"),a="INPUT"===e.target.tagName||"TEXTAREA"===e.target.tagName||e.target.isContentEditable;if(!o||i||a||"h"!==e.key.toLowerCase()&&"j"!==e.key.toLowerCase()&&"k"!==e.key.toLowerCase()&&"l"!==e.key.toLowerCase()&&"i"!==e.key.toLowerCase()&&"Enter"!==e.key&&"Escape"!==e.key||(e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),logger.debug("Auth: Intercepted key:",e.key,"preventing main vim activation")),"h"!==e.key.toLowerCase()&&"j"!==e.key.toLowerCase()&&"k"!==e.key.toLowerCase()&&"l"!==e.key.toLowerCase()&&"i"!==e.key.toLowerCase()&&"Enter"!==e.key&&"Escape"!==e.key||logger.debug("Auth: Key pressed:",e.key,"isVimNavigationActive:",r),r)if(o){if(i)return"Escape"===e.key?(e.preventDefault(),e.stopPropagation(),void function(){logger.debug("Auth: Exiting insert mode"),i=!1,w();var e=p();e&&(e.blur(),window.getSelection&&window.getSelection().removeAllRanges(),e.style.outline="none");f()}()):void logger.debug("Auth: Insert mode - letting key pass through:",e.key);switch(e.key.toLowerCase()){case"h":e.preventDefault(),e.stopPropagation(),function(){if(l.length<=1)return;var e=l[n];if(!e)return;for(var t=-1,o=-1,r=0;r<l.length;r++){var i=l[r];i.row===e.row&&i.column<e.column&&i.column>o&&(o=i.column,t=r)}if(-1===t)for(var a=-1,u=0;u<l.length;u++){var c=l[u];c.row===e.row&&c.column>a&&(a=c.column,t=u)}t>=0&&t!==n&&(n=t,f(),A(),logger.debug("Auth: Moved left to index ".concat(t)))}();break;case"j":e.preventDefault(),e.stopPropagation(),function(){if(l.length<=1)return;var e=l[n];if(!e)return;for(var t=-1,o=1/0,r=0;r<l.length;r++){var i=l[r];i.column===e.column&&i.row>e.row&&i.row<o&&(o=i.row,t=r)}if(-1===t)for(var a=1/0,u=0;u<l.length;u++){var c=l[u];c.column===e.column&&c.row<a&&(a=c.row,t=u)}t>=0&&(n=t,f(),A(),logger.debug("Auth: Moved down to index ".concat(t)))}();break;case"k":e.preventDefault(),e.stopPropagation(),function(){if(l.length<=1)return;var e=l[n];if(!e)return;for(var t=-1,o=-1,r=0;r<l.length;r++){var i=l[r];i.column===e.column&&i.row<e.row&&i.row>o&&(o=i.row,t=r)}if(-1===t)for(var a=-1,u=0;u<l.length;u++){var c=l[u];c.column===e.column&&c.row>a&&(a=c.row,t=u)}t>=0&&(n=t,f(),A(),logger.debug("Auth: Moved up to index ".concat(t)))}();break;case"l":e.preventDefault(),e.stopPropagation(),function(){if(l.length<=1)return;var e=l[n];if(!e)return;for(var t=-1,o=1/0,r=0;r<l.length;r++){var i=l[r];i.row===e.row&&i.column>e.column&&i.column<o&&(o=i.column,t=r)}if(-1===t)for(var a=1/0,u=0;u<l.length;u++){var c=l[u];c.row===e.row&&c.column<a&&(a=c.column,t=u)}t>=0&&t!==n&&(n=t,f(),A(),logger.debug("Auth: Moved right to index ".concat(t)))}();break;case"i":e.preventDefault(),e.stopPropagation(),b();break;case"enter":e.preventDefault(),e.stopPropagation(),function(){var e=p(),t=l[n];if(!e||!t)return void logger.debug("Auth: No element to activate");if(logger.debug("Auth: Activating element:",t.type,t.selector),"input"===t.type)b();else if("button"===t.type||"link"===t.type){(e.textContent.toLowerCase().includes("cancel")||e.classList.contains("secondary")||e.onclick&&e.onclick.toString().includes("closeAuthModal"))&&(window.authModalClosingViaCancel=!0);try{e.click()}catch(e){logger.debug("Auth: Error clicking element:",e)}}}();break;case"escape":e.preventDefault(),e.stopPropagation(),window.disableVimNavigation&&window.disableVimNavigation(),logger.debug("Auth: Already in normal mode - escape does not close modal, main vim forcibly disabled")}}else logger.debug("Auth: Key ignored - modal not visible");else logger.debug("Auth: Key ignored - vim navigation not active")}function b(){var e=p(),t=l[n];e&&t&&"input"===t.type?(logger.debug("Auth: Entering insert mode on input field"),i=!0,y(),e.focus(),function(e){if(!e)return;var t=document.createElement("div");t.className="auth-insert-indicator",t.textContent="INSERT";var o=e.getBoundingClientRect();t.style.cssText="\n    position: fixed;\n    top: ".concat(o.top-30,"px;\n    left: ").concat(o.left,"px;\n    background: rgba(0, 255, 0, 0.95);\n    color: black;\n    padding: 2px 6px;\n    border-radius: 3px;\n    font-size: 11px;\n    font-weight: bold;\n    z-index: 99999;\n    pointer-events: none;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(0, 200, 0, 1);\n  "),document.body.appendChild(t)}(e)):logger.debug("Auth: Cannot enter insert mode - not on input field")}function f(){if(logger.debug("Auth: updateCursor called"),y(),!i){var e=p();logger.debug("Auth: Current element for cursor:",e),e?function(e){if(!e)return;var t=l[n];if("input"===t.type){var o=document.createElement("div");o.className="auth-vim-cursor",o.style.cssText="\n      position: fixed;\n      border: 3px solid #ff6b35;\n      border-radius: 6px;\n      pointer-events: none;\n      z-index: 99998;\n      animation: auth-vim-cursor-pulse 1s ease-in-out infinite alternate;\n      box-shadow: 0 0 12px rgba(255, 107, 53, 0.8);\n      background: rgba(255, 107, 53, 0.1);\n    ";var r=e.getBoundingClientRect(),i=4;o.style.top=r.top-i+"px",o.style.left=r.left-i+"px",o.style.width=r.width+2*i+"px",o.style.height=r.height+2*i+"px",document.body.appendChild(o)}else if("button"===t.type){var a=e.textContent;e.setAttribute("data-original-auth-text",a),e.textContent="ðŸ§‹ "+a}else if("link"===t.type){var u=document.createElement("div");u.className="auth-vim-cursor",u.textContent="ðŸ§‹",u.style.cssText="\n      position: fixed;\n      font-size: 14px;\n      z-index: 99999;\n      pointer-events: none;\n      animation: auth-vim-cursor-pulse 1s ease-in-out infinite alternate;\n      filter: drop-shadow(0 0 6px rgba(255, 255, 255, 1)) drop-shadow(0 0 3px rgba(0, 0, 0, 0.8));\n      background: rgba(255, 165, 0, 0.95);\n      border: 2px solid white;\n      border-radius: 50%;\n      width: 22px;\n      height: 22px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-shadow: 0 0 8px rgba(255, 165, 0, 0.7);\n    ";var c=e.getBoundingClientRect();u.style.top=c.top+c.height/2-11+"px",u.style.left=c.left-25+"px",document.body.appendChild(u)}if(!document.getElementById("auth-vim-cursor-styles")){var d=document.createElement("style");d.id="auth-vim-cursor-styles",d.textContent="\n      @keyframes auth-vim-cursor-pulse {\n        0% { \n          opacity: 0.7; \n        }\n        100% { \n          opacity: 1; \n        }\n      }\n    ",document.head.appendChild(d)}}(e):logger.debug("Auth: No element found for cursor")}}function y(){document.querySelectorAll(".auth-vim-cursor").forEach(function(e){logger.debug("Auth: Removing cursor element:",e.className),e.remove()}),document.querySelectorAll("#authModal input, #authModal textarea").forEach(function(e){e.style&&(e.style.border="",e.style.outline="",e.style.boxShadow="")}),document.querySelectorAll("[data-original-auth-text]").forEach(function(e){e.textContent=e.getAttribute("data-original-auth-text"),e.removeAttribute("data-original-auth-text")})}function w(){document.querySelectorAll('.auth-insert-indicator, .insert-indicator, [class*="insert-indicator"]').forEach(function(e){e.remove()})}function A(){var e=p();if(e){var t=e.getBoundingClientRect(),o=window.innerHeight,n=window.innerWidth;(t.top<0||t.bottom>o||t.left<0||t.right>n)&&(logger.debug("Auth: Element is out of view, scrolling into view"),e.scrollIntoView({behavior:"smooth",block:"center",inline:"center"}))}}function x(){r&&!i&&f()}function k(){return i}function C(){return a}}}]);