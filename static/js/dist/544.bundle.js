"use strict";(self.webpackChunkboba_vim=self.webpackChunkboba_vim||[]).push([[544],{544:(e,t,n)=>{n.r(t),n.d(t,{disableSettingsVim:()=>d,getCurrentSettingsMode:()=>k,getInsertModeStatus:()=>C,initializeSettingsVim:()=>c,refreshSettingsCursor:()=>h,updateSettingsVimForMode:()=>u});var o=0,i=!1,r=!1,l="main",a=[],s=!1,g={main:[{selector:"#closeSettingsModal",column:0,row:0,type:"button"},{selector:"#resendConfirmationBtn",column:0,row:1,type:"button"},{selector:"#currentPassword",column:0,row:2,type:"input"},{selector:"#newPassword",column:0,row:3,type:"input"},{selector:"#confirmNewPassword",column:0,row:4,type:"input"},{selector:'#changePasswordForm button[type="submit"]',column:0,row:5,type:"button"},{selector:"#deleteAccountBtn",column:0,row:6,type:"button"}],deleteConfirm:[{selector:"#closeDeleteModal",column:0,row:0,type:"button"},{selector:"#deleteConfirmation",column:0,row:1,type:"input"},{selector:"#confirmDeleteBtn",column:0,row:2,type:"button"},{selector:"#cancelDeleteBtn",column:1,row:2,type:"button"}]};function c(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"main";logger.debug("=== INITIALIZING SETTINGS VIM NAVIGATION ==="),logger.debug("Settings mode:",e,"isVimNavigationActive:",i,"keyListenerAdded:",s),logger.debug("Settings: Force cleaning up any previous state"),document.removeEventListener("keydown",v,!0),s=!1,w(),y(),i=!1,r=!1,o=0,a=[];var t=document.getElementById("deleteConfirm"===e?"deleteConfirmModal":"userSettingsModal");if(t){var n=window.getComputedStyle(t);logger.debug("Settings modal display:",n.display),l=e,m(e),0!==a.length?(o=0,i=!0,logger.debug("Settings vim starting at element index: ".concat(o)),logger.debug("Available elements:",a),window.hideCursor&&window.hideCursor(),window.disableVimNavigation&&window.disableVimNavigation(),b(),s?logger.debug("Settings: Event listener already exists"):(document.addEventListener("keydown",v,!0),s=!0,logger.debug("Settings: Event listener added with capture=true")),document.addEventListener("click",function(e){if(t&&!t.classList.contains("hidden")&&i){var n=e.target;if("INPUT"!==n.tagName&&"TEXTAREA"!==n.tagName){n.closest("#".concat(t.id))&&(n.classList.contains("close-btn")||n.classList.contains("secondary")&&n.textContent.toLowerCase().includes("cancel")||"closeSettingsModal"===n.id||"closeDeleteModal"===n.id||"cancelDeleteBtn"===n.id)&&(logger.debug("Settings: Detected close button click - marking for cleanup"),window.settingsModalClosingViaCancel=!0)}else{var r=a.findIndex(function(e){return document.querySelector(e.selector)===n});-1!==r&&(o=r,p(),logger.debug("Settings: Auto-entered insert mode via click on input"))}}},!0),logger.debug("=== SETTINGS VIM NAVIGATION INITIALIZED ===")):logger.warn("Settings: No available elements found for navigation")}else logger.warn("No settings modal found for vim navigation")}function d(){logger.debug("Settings: Disabling settings vim navigation"),i=!1,r=!1,w(),y(),window.getSelection&&window.getSelection().removeAllRanges(),document.querySelectorAll("#userSettingsModal input, #userSettingsModal textarea, #userSettingsModal button, #deleteConfirmModal input, #deleteConfirmModal textarea, #deleteConfirmModal button").forEach(function(e){if(e.blur&&e.blur(),e.setSelectionRange)try{e.setSelectionRange(0,0)}catch(e){}e.style&&(e.style.outline="",e.style.boxShadow="",e.style.border="")}),document.activeElement&&document.activeElement.blur&&document.activeElement.blur(),document.querySelectorAll(".vim-cursor").forEach(function(e){e.remove()}),document.querySelectorAll("[data-original-text]").forEach(function(e){var t=e.getAttribute("data-original-text");t&&(e.textContent=t,e.removeAttribute("data-original-text"))}),document.removeEventListener("keydown",v,!0),s=!1,o=0,a=[],l="main",logger.debug("Settings vim navigation disabled and state reset")}function u(e){i&&(l=e,m(e),o=0,r||b(),logger.debug("Settings vim updated for mode:",e))}function m(e){a=[];var t=g[e];t?(logger.debug("Settings: Updating elements for mode: ".concat(e)),t.forEach(function(e){var t=document.querySelector(e.selector);logger.debug("Settings: Looking for element with selector: ".concat(e.selector),t?"FOUND":"NOT FOUND"),t&&function(e){if(!e)return!1;try{var t=window.getComputedStyle(e),n=e.getBoundingClientRect();return"none"!==t.display&&"hidden"!==t.visibility&&"0"!==t.opacity&&n.width>0&&n.height>0&&!e.hasAttribute("disabled")&&!e.classList.contains("hidden")}catch(e){return logger.debug("Settings: Error checking visibility:",e),!1}}(t)?(a.push(e),logger.debug("Settings: Added element ".concat(e.selector," to navigation"))):t&&logger.debug("Settings: Element ".concat(e.selector," found but not visible"))}),logger.debug("Available settings elements:",a.length)):logger.warn("Unknown settings mode:",e)}function f(){if(o<0||o>=a.length)return null;var e=a[o];if(!e)return null;try{return document.querySelector(e.selector)}catch(e){return null}}function v(e){var t=document.getElementById("userSettingsModal"),n=document.getElementById("deleteConfirmModal"),l=t&&!t.classList.contains("hidden")||n&&!n.classList.contains("hidden"),s="INPUT"===e.target.tagName||"TEXTAREA"===e.target.tagName||e.target.isContentEditable;if(!l||r||s||"h"!==e.key.toLowerCase()&&"j"!==e.key.toLowerCase()&&"k"!==e.key.toLowerCase()&&"l"!==e.key.toLowerCase()&&"i"!==e.key.toLowerCase()&&"Enter"!==e.key&&"Escape"!==e.key||(e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),logger.debug("Settings: Intercepted key:",e.key,"preventing main vim activation")),"h"!==e.key.toLowerCase()&&"j"!==e.key.toLowerCase()&&"k"!==e.key.toLowerCase()&&"l"!==e.key.toLowerCase()&&"i"!==e.key.toLowerCase()&&"Enter"!==e.key&&"Escape"!==e.key||logger.debug("Settings: Key pressed:",e.key,"isVimNavigationActive:",i),i)if(l){if(r)return"Escape"===e.key?(e.preventDefault(),e.stopPropagation(),void function(){logger.debug("Settings: Exiting insert mode"),r=!1,y();var e=f();e&&(e.blur(),window.getSelection&&window.getSelection().removeAllRanges(),e.style.outline="none");b()}()):void logger.debug("Settings: Insert mode - letting key pass through:",e.key);switch(e.key.toLowerCase()){case"h":e.preventDefault(),e.stopPropagation(),function(){if(a.length<=1)return;var e=a[o];if(!e)return;for(var t=-1,n=-1,i=0;i<a.length;i++){var r=a[i];r.row===e.row&&r.column<e.column&&r.column>n&&(n=r.column,t=i)}if(-1===t)for(var l=-1,s=0;s<a.length;s++){var g=a[s];g.row===e.row&&g.column>l&&(l=g.column,t=s)}t>=0&&t!==o&&(o=t,b(),S(),logger.debug("Settings: Moved left to index ".concat(t)))}();break;case"j":e.preventDefault(),e.stopPropagation(),function(){if(a.length<=1)return;var e=a[o];if(!e)return;for(var t=-1,n=1/0,i=0;i<a.length;i++){var r=a[i];r.column===e.column&&r.row>e.row&&r.row<n&&(n=r.row,t=i)}if(-1===t)for(var l=1/0,s=0;s<a.length;s++){var g=a[s];g.column===e.column&&g.row<l&&(l=g.row,t=s)}t>=0&&(o=t,b(),S(),logger.debug("Settings: Moved down to index ".concat(t)))}();break;case"k":e.preventDefault(),e.stopPropagation(),function(){if(a.length<=1)return;var e=a[o];if(!e)return;for(var t=-1,n=-1,i=0;i<a.length;i++){var r=a[i];r.column===e.column&&r.row<e.row&&r.row>n&&(n=r.row,t=i)}if(-1===t)for(var l=-1,s=0;s<a.length;s++){var g=a[s];g.column===e.column&&g.row>l&&(l=g.row,t=s)}t>=0&&(o=t,b(),S(),logger.debug("Settings: Moved up to index ".concat(t)))}();break;case"l":e.preventDefault(),e.stopPropagation(),function(){if(a.length<=1)return;var e=a[o];if(!e)return;for(var t=-1,n=1/0,i=0;i<a.length;i++){var r=a[i];r.row===e.row&&r.column>e.column&&r.column<n&&(n=r.column,t=i)}if(-1===t)for(var l=1/0,s=0;s<a.length;s++){var g=a[s];g.row===e.row&&g.column<l&&(l=g.column,t=s)}t>=0&&t!==o&&(o=t,b(),S(),logger.debug("Settings: Moved right to index ".concat(t)))}();break;case"i":e.preventDefault(),e.stopPropagation(),p();break;case"enter":e.preventDefault(),e.stopPropagation(),function(){var e=f(),t=a[o];if(!e||!t)return void logger.debug("Settings: No element to activate");if(logger.debug("Settings: Activating element:",t.type,t.selector),"input"===t.type)p();else if("button"===t.type){(e.textContent.toLowerCase().includes("cancel")||e.classList.contains("close-btn")||e.classList.contains("secondary")||"closeSettingsModal"===e.id||"closeDeleteModal"===e.id||"cancelDeleteBtn"===e.id)&&(window.settingsModalClosingViaCancel=!0);try{e.click()}catch(e){logger.debug("Settings: Error clicking element:",e)}}}();break;case"escape":e.preventDefault(),e.stopPropagation(),window.disableVimNavigation&&window.disableVimNavigation(),logger.debug("Settings: Already in normal mode - escape does not close modal, main vim forcibly disabled")}}else logger.debug("Settings: Key ignored - modal not visible");else logger.debug("Settings: Key ignored - vim navigation not active")}function p(){var e=f(),t=a[o];e&&t&&"input"===t.type?(logger.debug("Settings: Entering insert mode on input field"),r=!0,w(),e.focus(),function(e){if(!e)return;var t=document.createElement("div");t.className="settings-insert-indicator",t.textContent="INSERT";var n=e.getBoundingClientRect();t.style.cssText="\n    position: fixed;\n    top: ".concat(n.top-30,"px;\n    left: ").concat(n.left,"px;\n    background: rgba(0, 255, 0, 0.95);\n    color: black;\n    padding: 2px 6px;\n    border-radius: 3px;\n    font-size: 11px;\n    font-weight: bold;\n    z-index: 99999;\n    pointer-events: none;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(0, 200, 0, 1);\n  "),document.body.appendChild(t)}(e)):logger.debug("Settings: Cannot enter insert mode - not on input field")}function b(){if(logger.debug("Settings: updateCursor called"),w(),!r){var e=f();logger.debug("Settings: Current element for cursor:",e),e?function(e){if(!e)return;var t=a[o];if("input"===t.type){var n=document.createElement("div");n.className="settings-vim-cursor",n.style.cssText="\n      position: fixed;\n      border: 3px solid #ff6b35;\n      border-radius: 6px;\n      pointer-events: none;\n      z-index: 99998;\n      animation: settings-vim-cursor-pulse 1s ease-in-out infinite alternate;\n      box-shadow: 0 0 12px rgba(255, 107, 53, 0.8);\n      background: rgba(255, 107, 53, 0.1);\n    ";var i=e.getBoundingClientRect(),r=4;n.style.top=i.top-r+"px",n.style.left=i.left-r+"px",n.style.width=i.width+2*r+"px",n.style.height=i.height+2*r+"px",document.body.appendChild(n)}else if("button"===t.type){var l=e.textContent;e.setAttribute("data-original-settings-text",l),e.textContent="🧋 "+l}if(!document.getElementById("settings-vim-cursor-styles")){var s=document.createElement("style");s.id="settings-vim-cursor-styles",s.textContent="\n      @keyframes settings-vim-cursor-pulse {\n        0% { \n          opacity: 0.7; \n        }\n        100% { \n          opacity: 1; \n        }\n      }\n    ",document.head.appendChild(s)}}(e):logger.debug("Settings: No element found for cursor")}}function w(){document.querySelectorAll(".settings-vim-cursor").forEach(function(e){e.remove()}),document.querySelectorAll("[data-original-settings-text]").forEach(function(e){e.textContent=e.getAttribute("data-original-settings-text"),e.removeAttribute("data-original-settings-text")})}function y(){document.querySelectorAll(".settings-insert-indicator").forEach(function(e){e.remove()})}function S(){var e=f();if(e){var t=e.getBoundingClientRect(),n=window.innerHeight,o=window.innerWidth;(t.top<0||t.bottom>n||t.left<0||t.right>o)&&(logger.debug("Settings: Element is out of view, scrolling into view"),e.scrollIntoView({behavior:"smooth",block:"center",inline:"center"}))}}function h(){i&&!r&&b()}function C(){return r}function k(){return l}}}]);